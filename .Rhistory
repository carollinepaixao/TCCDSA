for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
dados <- read_csv("Database 2010-2020 - C421.csv")
summary(dados)
setwd("~/R/TCC1/TCC2")
dados <- read_csv("Database 2010-2020 - C421.csv")
summary(dados)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
dados <- dados %>%
mutate(Morte_Primeiro_Ano = case_when((Dias_Diagn_Obito <= 365 & Data_Obito != "" & Tipo_do_Obito == 'CÂNCER') ~ 1,
TRUE ~ 0))
View(dados)
dados <- dados %>%
mutate(Categ_Idade = case_when(Idade <= quantile(Idade, 0.3333, na.rm = T) ~ "Menores_Idades",
Idade > quantile(Idade, 0.3333, na.rm = T) & Idade <= quantile(Idade, 0.6667, na.rm = T) ~ "Idades_Médias",
Idade > quantile(Idade, 0.6667, na.rm = T) ~ "Maiores_Idades"))
dados <- dados %>%
mutate(Regiao = case_when(Estado_Endereco %in% c("DISTRITO FEDERAL", "GOIAS", "MATO GROSSO", "MATO GROSSO DO SUL") ~ "Centro-Oeste",
Estado_Endereco %in% c("ALAGOAS", "CEARÁ", "PARAÍBA", "PERNAMBUCO", "SERGIPE") ~ "Nordeste",
Estado_Endereco %in% c("ACRE", "AMAPA", "AMAZONAS", "PARÁ", "RONDONIA", "RORAIMA", "TOCANTINS") ~ "Norte",
Estado_Endereco %in% c("ESPIRITO SANTO", "MINAS GERAIS", "RIO DE JANEIRO", "SÃO PAULO") ~ "Sudeste",
Estado_Endereco %in% c("PARANÁ", "RIO GRANDE DO SUL", "SANTA CATARINA") ~ "Sul"))
# Análise Mortes < 1 Ano a partir do Ano de Diagnóstico
ggplot(dados, aes(x = Ano_Diagnostico, fill= Morte_Primeiro_Ano, label = Morte_Primeiro_Ano)) +
geom_bar(position = "dodge")+
ggtitle("Casos de Óbito < 1 ano da Data de Diagnósticopor por Câncer de Medula Óssea ")
table(dados$Morte_Primeiro_Ano)
dados <- dados %>%
mutate(Morte_Primeiro_Ano = case_when((Dias_Diagn_Obito <= 365 & Data_Obito != "" & Tipo_do_Obito == 'CÂNCER') ~ "Sim",
TRUE ~ "Não"))
# Análise Mortes < 1 Ano a partir do Ano de Diagnóstico
ggplot(dados, aes(x = Ano_Diagnostico, fill= Morte_Primeiro_Ano, label = Morte_Primeiro_Ano)) +
geom_bar(position = "dodge")+
ggtitle("Casos de Óbito < 1 ano da Data de Diagnósticopor por Câncer de Medula Óssea ")
table(dados$Morte_Primeiro_Ano)
dados <- dados %>%
mutate(Morte_Primeiro_Ano = case_when((Dias_Diagn_Obito <= 365 & Data_Obito != "" & Tipo_do_Obito == 'CÂNCER') ~ "1",
TRUE ~ "0"))
# Análise Mortes < 1 Ano a partir do Ano de Diagnóstico
ggplot(dados, aes(x = Ano_Diagnostico, fill= Morte_Primeiro_Ano, label = Morte_Primeiro_Ano)) +
geom_bar(position = "dodge")+
ggtitle("Casos de Óbito < 1 ano da Data de Diagnósticopor por Câncer de Medula Óssea ")
table(dados$Morte_Primeiro_Ano)
# Análise Mortes < 1 Ano a partir do Ano de Diagnóstico
ggplot(dados, aes(x = Ano_Diagnostico, fill= Morte_Primeiro_Ano, label = Morte_Primeiro_Ano)) +
geom_bar(position = "dodge")
levels(dados$Morte_Primeiro_Ano)
dados <- dados %>%
mutate(Morte_Primeiro_Ano = case_when((Dias_Diagn_Obito <= 365 & Data_Obito != "" & Tipo_do_Obito == 'CÂNCER') ~ 1,
TRUE ~ 0))
table(dados$Morte_Primeiro_Ano)
levels(dados$Morte_Primeiro_Ano)
dados <- dados %>% select("Morte_Primeiro_Ano",everything())
dados <- dados %>%
select(-Idade, -Dias_Diagn_Obito, -Data_Obito,-Tipo_do_Obito, -Ano_Diagnostico, -Descricao_da_Topografia, -Estado_Endereco)
dados <- as.data.frame(unclass(dados), stringsAsFactors=TRUE)
glimpse(dados)
table(dados$Morte_Primeiro_Ano)
levels(dados$Raca.Cor)
dados$Raca.Cor <- relevel(dados$Raca.Cor, ref = "BRANCO")
levels(dados$Categ_Idade)
dados$Categ_Idade <- relevel(dados$Categ_Idade, ref = "Menores_Idades")
levels(dados$Regiao)
dados$Regiao <- relevel(dados$Regiao, ref = "Sudeste")
#Step 13 - Dummizar variáveis
dados_dummies <- dummy_columns(.data = dados,
select_columns = c("Sexo",
"Categ_Idade",
"Raca.Cor",
"Grau_de_Instrução",
"Estado_Civil",
"Regiao",
"Meio_de_Diagnostico"),
remove_selected_columns = T,
remove_first_dummy = T,
ignore_na = T)
modelo_dadosdm <- glm(formula = Morte_Primeiro_Ano ~ .,
data = dados_dummies,
family = binomial(link = "logit"))
# Parâmetros do modelo
summary(modelo_dadosdm)
#Step 17 - Stepwise
step_modelodm <- step(object = modelo_dadosdm,
k = qchisq(p = 0.05, df = 1, lower.tail = FALSE))
# Parâmetros do modelo step_fidelidade_dummies
summary(step_modelodm)
#Outro modo de apresentar os outputs do modelo step_fidelidade_dummies ?????
summ(step_modelodm, confint = T, digits = 3, ci.width = .95)
pacotes <- c("plotly","tidyverse","ggrepel","knitr", "kableExtra",
"sjPlot","FactoMineR","amap","ade4","readxl","dplyr",
"fastDummies","reshape2","rgl","car","jtools","magick",
"cowplot","equatiomatic","stargazer","lmtest","caret",
"pROC","ROCR","nnet","globals")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
dados <- read_csv("Database 2010-2020 - C421.csv")
summary(dados)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
dados <- dados %>%
mutate(Morte_Primeiro_Ano = case_when((Dias_Diagn_Obito <= 365 & Data_Obito != "" & Tipo_do_Obito == 'CÂNCER') ~ 1,
TRUE ~ 0))
pacotes <- c("plotly","tidyverse","ggrepel","knitr", "kableExtra",
"sjPlot","FactoMineR","amap","ade4","readxl","dplyr",
"fastDummies","reshape2","rgl","car","jtools","magick",
"cowplot","equatiomatic","stargazer","lmtest","caret",
"pROC","ROCR","nnet","globals")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
dados <- read_csv("Database 2010-2020 - C421.csv")
dados <- read_csv("Database 2010-2020 - C421.csv")
summary(dados)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
dados <- dados %>%
mutate(Morte_Primeiro_Ano = case_when((Dias_Diagn_Obito <= 365 & Data_Obito != "" & Tipo_do_Obito == 'CÂNCER') ~ 1,
TRUE ~ 0))
dados <- dados %>%
mutate(Categ_Idade = case_when(Idade <= quantile(Idade, 0.3333, na.rm = T) ~ "Menores_Idades",
Idade > quantile(Idade, 0.3333, na.rm = T) & Idade <= quantile(Idade, 0.6667, na.rm = T) ~ "Idades_Médias",
Idade > quantile(Idade, 0.6667, na.rm = T) ~ "Maiores_Idades"))
dados <- dados %>%
mutate(Regiao = case_when(Estado_Endereco %in% c("DISTRITO FEDERAL", "GOIAS", "MATO GROSSO", "MATO GROSSO DO SUL") ~ "Centro-Oeste",
Estado_Endereco %in% c("ALAGOAS", "CEARÁ", "PARAÍBA", "PERNAMBUCO", "SERGIPE") ~ "Nordeste",
Estado_Endereco %in% c("ACRE", "AMAPA", "AMAZONAS", "PARÁ", "RONDONIA", "RORAIMA", "TOCANTINS") ~ "Norte",
Estado_Endereco %in% c("ESPIRITO SANTO", "MINAS GERAIS", "RIO DE JANEIRO", "SÃO PAULO") ~ "Sudeste",
Estado_Endereco %in% c("PARANÁ", "RIO GRANDE DO SUL", "SANTA CATARINA") ~ "Sul"))
# Análise Mortes < 1 Ano a partir do Ano de Diagnóstico
ggplot(dados, aes(x = Ano_Diagnostico, fill= Morte_Primeiro_Ano, label = Morte_Primeiro_Ano)) +
geom_bar(position = "dodge")
table(dados$Morte_Primeiro_Ano)
dados <- dados %>% select("Morte_Primeiro_Ano",everything())
dados <- dados %>%
select(-Idade, -Dias_Diagn_Obito, -Data_Obito,-Tipo_do_Obito, -Ano_Diagnostico, -Descricao_da_Topografia, -Estado_Endereco)
dados <- as.data.frame(unclass(dados), stringsAsFactors=TRUE)
glimpse(dados)
summary(dados)
levels(dados$Raca.Cor)
dados$Raca.Cor <- relevel(dados$Raca.Cor, ref = "BRANCO")
levels(dados$Categ_Idade)
dados$Categ_Idade <- relevel(dados$Categ_Idade, ref = "Menores_Idades")
levels(dados$Regiao)
dados$Regiao <- relevel(dados$Regiao, ref = "Sudeste")
#Step 13 - Dummizar variáveis
dados_dummies <- dummy_columns(.data = dados,
select_columns = c("Sexo",
"Categ_Idade",
"Raca.Cor",
"Grau_de_Instrução",
"Estado_Civil",
"Regiao",
"Meio_de_Diagnostico"),
remove_selected_columns = T,
remove_first_dummy = T,
ignore_na = T)
modelo_dadosdm <- glm(formula = Morte_Primeiro_Ano ~ .,
data = dados_dummies,
family = binomial(link = "logit"))
summ(modelo_dadosdm, confint = T, digits = 3, ci.width = .95)
# Valor do LL do modelo
logLik(modelo_dadosdm)
#Step 17 - Stepwise
step_modelodm <- step(object = modelo_dadosdm,
k = qchisq(p = 0.05, df = 1, lower.tail = FALSE))
#Outro modo de apresentar os outputs do modelo step_fidelidade_dummies ?????
summ(step_modelodm, confint = T, digits = 3, ci.width = .95)
confusionMatrix(table(predict(modelo_dadosdm, type = "response")  >= 0.5,
dados$Morte_Primeiro_Ano == 1)[2:1, 2:1]
)
Anova(modelo_dados, type ="II", test = "Wald") #=modelo dummy s/ step
Anova(modelo_dadosdm, type ="II", test = "Wald") #=modelo dummy s/ step
summary(modelo_dadosdm)
modelo_nulo <- glm(formula = Morte_Primeiro_Ano ~ 1,
data = dados,
family = binomial(link = "logit"))
modelo_dados <- glm(formula = Morte_Primeiro_Ano ~ .,
data = dados_dummies,
family = binomial(link = "logit"))
logLik(modelo_dados)
chi2 <- -2*(logLik(modelo_nulo)-logLik(modelo_dados))
chi2
pchisq(chi2, df = 30, lower.tail = F)
summ(modelo_dados, confint = T, digits = 3, ci.width = .95)
summ(modelo_dados, confint = T, digits = 3, ci.width = .95)
Anova(modelo_dadosdm, type ="II", test = "Wald") #=modelo dummy s/ step
PseudoR2(modelo_dadosdm, which = "Nagelkerke")
exp(cbind(OR = coef(step_modelodm), confint(step_modelodm)))
PseudoR2(modelo_dadosdm, which = "Nagelkerke")
Anova(modelo_dados, type ="II", test = "Wald") #=modelo dummy s/ step
summary(modelo_dadosdm)
modelo_nulo <- glm(formula = Morte_Primeiro_Ano ~ 1,
data = dados,
family = binomial(link = "logit"))
chi2 <- -2*(logLik(modelo_nulo)-logLik(modelo_dados))
chi2
pchisq(chi2, df = 30, lower.tail = F)
summ(modelo_dados, confint = T, digits = 3, ci.width = .95)
Anova(modelo_dadosdm, type ="II", test = "Wald") #=modelo dummy s/ step
summary(modelo_dadosdm)
Anova(modelo_nulo, type ="II", test = "Wald") #=modelo dummy s/ step
Anova(step_modelodm, type ="II", test = "Wald") #=modelo dummy s/ step
summary(modelo_dadosdm)
Anova(modelo_dados, type ="II", test = "Wald") #=modelo dummy s/ step
Anova(modelo_dados, type ="II", test = "Wald") #=modelo dummy s/ step
Anova(dados, type ="II", test = "Wald") #=modelo dummy s/ step
summ(modelo_dados, confint = T, digits = 3, ci.width = .95)
Anova(step_modelodm, type ="II", test = "Wald") #=modelo dummy s/ step
waldtest(modelo_dadosdm)
Anova(modelo_dadosdm, type ="II", test = "Wald") #=modelo dummy s/ step
Anova(modelo_dados, type ="II", test = "Wald") #=modelo dummy s/ step
summary(modelo_dados)
summ(modelo_dados, confint = T, digits = 3, ci.width = .95)
library(QuantPsyc)
ClassLog(step_modelodm, dados$Morte_Primeiro_Ano)
pacotes <- c("plotly","tidyverse","ggrepel","knitr", "kableExtra",
"sjPlot","FactoMineR","amap","ade4","readxl","dplyr",
"fastDummies","reshape2","rgl","car","jtools","magick",
"cowplot","equatiomatic","stargazer","lmtest","caret",
"pROC","ROCR","nnet","globals")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
#Step 2 - Carregar dados
dados <- read_csv("Database 2010-2020 - C421.csv")
summary(dados)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
pacotes <- c("plotly","tidyverse","ggrepel","knitr", "kableExtra",
"sjPlot","FactoMineR","amap","ade4","readxl","dplyr",
"fastDummies","reshape2","rgl","car","jtools","magick",
"cowplot","equatiomatic","stargazer","lmtest","caret",
"pROC","ROCR","nnet","globals")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
dados <- read_csv("Database 2010-2020 - C421.csv")
summary(dados)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
dados <- dados %>%
mutate(Morte_Primeiro_Ano = case_when((Dias_Diagn_Obito <= 365 & Data_Obito != "" & Tipo_do_Obito == 'CÂNCER') ~ 1,
TRUE ~ 0))
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
pacotes <- c("plotly","tidyverse","ggrepel","knitr", "kableExtra",
"sjPlot","FactoMineR","amap","ade4","readxl","dplyr",
"fastDummies","reshape2","rgl","car","jtools","magick",
"cowplot","equatiomatic","stargazer","lmtest","caret",
"pROC","ROCR","nnet","globals")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
dados <- read_csv("Database 2010-2020 - C421.csv")
summary(dados)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
library("dplyr")
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
pacotes <- c("plotly","tidyverse","ggrepel","knitr", "kableExtra",
"sjPlot","FactoMineR","amap","ade4","readxl","dplyr",
"fastDummies","reshape2","rgl","car","jtools","magick",
"cowplot","equatiomatic","stargazer","lmtest","caret",
"pROC","ROCR","nnet","globals")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
dados <- read_csv("Database 2010-2020 - C421.csv")
summary(dados)
dados <- dados %>%
select(-Codigo_do_Paciente, -Nome_do_RCBP, -Data_de_Nascimento, -Nacionalidade,	-Naturalidade_Estado,	-Naturalidade,
-Codigo_Profissao, -Nome_Profissao, -Cidade_Endereco, -Descricao_da_Morfologia, -Codigo_da_Morfologia,
-Descricao_da_Doenca, -Codigo_da_Doenca,	-Descricao_da_Doenca_Infantil,	-Codigo_da_Doenca_Infantil,
-Descricao_da_Doenca_Adulto_Jovem,	-Codigo_da_Doenca_Adulto_Jovem,	-Indicador_de_Caso_Raro,
-Extensao,-Lateralidade,	-Estadiamento,	-TNM, -Data_de_Ultimo_Contato,	-Metastase_a_distancia, -Data_do_obito,
-Data_Obito2,-Data_de_Diagnostico, -Data_Diag2, -Morte_Cancer,	-Check, -Codigo_da_Topografia,
-Data_Diagnostico,-Status_Vital, -Ano_Obito)
dados <- dados %>%
mutate(Morte_Primeiro_Ano = case_when((Dias_Diagn_Obito <= 365 & Data_Obito != "" & Tipo_do_Obito == 'CÂNCER') ~ 1,
TRUE ~ 0))
table(dados$Morte_Primeiro_Ano)
dados <- dados %>%
mutate(Categ_Idade = case_when(Idade <= quantile(Idade, 0.3333, na.rm = T) ~ "Menores_Idades",
Idade > quantile(Idade, 0.3333, na.rm = T) & Idade <= quantile(Idade, 0.6667, na.rm = T) ~ "Idades_Médias",
Idade > quantile(Idade, 0.6667, na.rm = T) ~ "Maiores_Idades"))
dados <- dados %>%
mutate(Regiao = case_when(Estado_Endereco %in% c("DISTRITO FEDERAL", "GOIAS", "MATO GROSSO", "MATO GROSSO DO SUL") ~ "Centro-Oeste",
Estado_Endereco %in% c("ALAGOAS", "CEARÁ", "PARAÍBA", "PERNAMBUCO", "SERGIPE") ~ "Nordeste",
Estado_Endereco %in% c("ACRE", "AMAPA", "AMAZONAS", "PARÁ", "RONDONIA", "RORAIMA", "TOCANTINS") ~ "Norte",
Estado_Endereco %in% c("ESPIRITO SANTO", "MINAS GERAIS", "RIO DE JANEIRO", "SÃO PAULO") ~ "Sudeste",
Estado_Endereco %in% c("PARANÁ", "RIO GRANDE DO SUL", "SANTA CATARINA") ~ "Sul"))
dados <- dados %>% select("Morte_Primeiro_Ano",everything())
dados <- dados %>%
select(-Idade, -Dias_Diagn_Obito, -Data_Obito,-Tipo_do_Obito, -Ano_Diagnostico, -Descricao_da_Topografia, -Estado_Endereco)
dados <- as.data.frame(unclass(dados), stringsAsFactors=TRUE)
glimpse(dados)
summary(dados)
levels(dados$Raca.Cor)
dados$Raca.Cor <- relevel(dados$Raca.Cor, ref = "BRANCO")
levels(dados$Categ_Idade)
dados$Categ_Idade <- relevel(dados$Categ_Idade, ref = "Menores_Idades")
levels(dados$Regiao)
dados$Regiao <- relevel(dados$Regiao, ref = "Sudeste")
dados_dummies <- dummy_columns(.data = dados,
select_columns = c("Sexo",
"Categ_Idade",
"Raca.Cor",
"Grau_de_Instrução",
"Estado_Civil",
"Regiao",
"Meio_de_Diagnostico"),
remove_selected_columns = T,
remove_first_dummy = T,
ignore_na = T)
modelo_dadosdm <- glm(formula = Morte_Primeiro_Ano ~ .,
data = dados_dummies,
family = binomial(link = "logit"))
#Parâmetros do modelo
summ(modelo_dadosdm, confint = T, digits = 3, ci.width = .95)
# Valor do LL do modelo
logLik(modelo_dadosdm)
step_modelodm <- step(object = modelo_dadosdm,
k = qchisq(p = 0.05, df = 1, lower.tail = FALSE))
# Parâmetros do modelo step_modelodm
summ(step_modelodm, confint = T, digits = 3, ci.width = .95)
#Valor do LL do modelo após o stepwise
logLik(step_modelodm)
lrtest(modelo_dadosdm, step_modelodm)
library("MASS")
plot(modelo_dadosdm, which =5)
summary(stdres(modelo_dadosdm))
plot(step_modelodm, which =5)
summary(stdres(step_modelodm))
library("psych")
pairs.panels(dados)
vif(modelo_dadosdm)
modelo_nulo <- glm(formula = Morte_Primeiro_Ano ~ 1,
data = dados,
family = binomial(link = "logit"))
logLik(modelo_nulo)
modelo_dados <- glm(formula = Morte_Primeiro_Ano ~ .,
data = dados_dummies,
family = binomial(link = "logit"))
logLik(modelo_dados)
chi2 <- -2*(logLik(modelo_nulo)-logLik(modelo_dados))
chi2
pchisq(chi2, df = 30, lower.tail = F)
Anova(modelo_dados, type ="II", test = "Wald")
View(modelo_dados)
chi2 <- -2*(logLik(modelo_nulo)-logLik(modelo_dados))
chi2
pchisq(chi2, df = 30, lower.tail = F)
Anova(modelo_dados, type ="II", test = "Wald")
# Parâmetros do modelo step_modelodm
summ(step_modelodm, confint = T, digits = 3, ci.width = .95)
lrtest(modelo_dadosdm, step_modelodm)
modelo_dados <- glm(formula = Morte_Primeiro_Ano ~ .,
data = dados,
family = binomial(link = "logit"))
logLik(modelo_dados)
chi2 <- -2*(logLik(modelo_nulo)-logLik(modelo_dados))
chi2
pchisq(chi2, df = 30, lower.tail = F)
Anova(modelo_dados, type ="II", test = "Wald")
exp(cbind(OR = coef(step_modelodm), confint(step_modelodm)))
export_summs(modelo_dadosdm, step_modelodm,
model.names = c("Modelo Dummies","Modelo Dummies Stepwise"),
scale = F, digits = 4)
exp(cbind(OR = coef(modelo_dadosdm), confint(modelo_dadosdm)))
library(QuantPsyc)
ClassLog(modelo_dadosdm, dados$Morte_Primeiro_Ano)
export_summs(modelo_dadosdm, step_modelodm,
model.names = c("Modelo Dummies","Modelo Dummies Stepwise"),
scale = F, digits = 4)
AIC(step_modelodm)
BIC(step_modelodm)
ClassLog(step_modelodm, dados$Morte_Primeiro_Ano)
ClassLog(modelo_dadosdm, dados$Morte_Primeiro_Ano)
AIC(modelo_dadosdm)
BIC(modelo_dadosdm)
AIC(step_modelodm)
BIC(step_modelodm)
